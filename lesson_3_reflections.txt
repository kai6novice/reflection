When would you want to use a remote repository rather than keeping all your work local?
when you're doing collaboration a project with others. when your local storage is not safe, either corrupted or don't have enough space.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
because if someone updated the remote repository, and git automatically pull the changes, the changes might overwrite your local changes made in the same file.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
fork only happen in github, it links between cloned remote repository.
clones happen both in github and local. it's a way to copy an entire repository without any linkage. Unless you clone a repository from remote to local, then the clone will have a pointer, points back to remote.
branches, is a temporary clone of a repo, it will point back to the origin branch it's branch from.

What is the benefit of having a copy of the last known state of the remote stored locally?
so you can work offline

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would send a copy of my work to my coworker, mark the changes I made, and have he/she review it.
I believe git/github is easier, becasue you don't need to mark your changes, git/github will display the difference for you. And there is a good way of communication workflow built-in and track.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When your changes might not be stable or solid enough to be in the master branch,so you want to keep the master branch as the stable branch. The branching approach give you a separate copy of the project and keep a stable copy as well as a development copy. If you make changes in the master branch, it will save you time when merging, becasue you merge earlier.